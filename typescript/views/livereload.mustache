<script type="text/javascript">
    /**
     * @file site/client-websocket.js
     */
    ;(() => {
        const socketUrl = 'ws://{{wsHost}}'
        let socket = new WebSocket(socketUrl)
        socket.addEventListener('close', () => {
            // Then the server has been turned off,
            // either due to file-change-triggered reboot,
            // or to truly being turned off.

            // Attempt to re-establish a connection until it works,
            // failing after a few seconds (at that point things are likely
            // turned off/permanantly broken instead of rebooting)
            const mintimeout = 100
            const maxTimeout = 300
            const maxAttempts = 30
            let attempts = 0

            const reloadIfCanConnect = () => {
                attempts++
                if (attempts > maxAttempts) {
                    if (attempts < maxAttempts + 2) {
                        // Only show dev connection error twice per closure
                        console.error('Could not reconnect to dev server.')
                    }

                    setTimeout(reloadIfCanConnect, maxTimeout)
                    return
                }
                socket = new WebSocket(socketUrl)
                socket.addEventListener('error', () => {
                    // Backoff is in the pattern 100ms, 200ms, 300ms, 100ms, 200ms, 300ms....
                    const backoff = ((mintimeout * attempts) % maxTimeout) + mintimeout
                    setTimeout(reloadIfCanConnect, backoff)
                })
                socket.addEventListener('open', () => {
                    location.reload()
                })
            }
            reloadIfCanConnect()
        })
    })()
</script>
